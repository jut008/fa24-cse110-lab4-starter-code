{"ast":null,"code":"var _jsxFileName = \"/Users/judytruong/Downloads/UCSD_CSE/CSE110_Lab4/fa24-cse110-lab4-starter-code/client/src/components/Expense/AddExpenseForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddExpenseForm = () => {\n  _s();\n  const {\n    setExpenses,\n    createExpense\n  } = useContext(AppContext);\n  const [name, setName] = useState(\"\");\n  const [cost, setCost] = useState(\"0\"); // Keep cost as string during input\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const parsedCost = parseFloat(cost); // Parse string to float here\n    if (isNaN(parsedCost) || parsedCost <= 0) {\n      window.alert(\"Please enter a valid positive cost\");\n      setCost(\"0\");\n      return;\n    }\n    const newExpense = {\n      id: uuidv4(),\n      description: name,\n      cost: parsedCost\n    };\n    createExpense(newExpense);\n    setExpenses(prevExpenses => [...prevExpenses, newExpense]);\n    setName(\"\");\n    setCost(\"0\");\n  };\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n  const handleCostChange = event => {\n    const value = event.target.value;\n\n    // Allow empty input, digits, or valid decimals\n    if (/^-?\\d*\\.?\\d*$/.test(value)) {\n      setCost(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          \"data-testid\": \"name-input\",\n          value: name,\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cost\",\n          children: \"Cost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          placeholder: \"0\",\n          className: \"form-control\",\n          id: \"cost-input\",\n          \"data-testid\": \"cost-input\",\n          value: cost,\n          onChange: handleCostChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-3\",\n          \"data-testid\": \"save-expense\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AddExpenseForm, \"xZSl+x1EqjUNgIPae5bdvwsX3TY=\");\n_c = AddExpenseForm;\nexport default AddExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"AddExpenseForm\");","map":{"version":3,"names":["React","useState","useContext","AppContext","v4","uuidv4","jsxDEV","_jsxDEV","AddExpenseForm","_s","setExpenses","createExpense","name","setName","cost","setCost","onSubmit","event","preventDefault","parsedCost","parseFloat","isNaN","window","alert","newExpense","id","description","prevExpenses","handleNameChange","target","value","handleCostChange","test","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","required","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/judytruong/Downloads/UCSD_CSE/CSE110_Lab4/fa24-cse110-lab4-starter-code/client/src/components/Expense/AddExpenseForm.tsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { Expense } from \"../../types/types\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AddExpenseForm = () => {\n  const { setExpenses, createExpense } = useContext(AppContext);\n\n  const [name, setName] = useState(\"\");\n  const [cost, setCost] = useState<string>(\"0\"); // Keep cost as string during input\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const parsedCost = parseFloat(cost); // Parse string to float here\n    if (isNaN(parsedCost) || parsedCost <= 0) {\n      window.alert(\"Please enter a valid positive cost\");\n      setCost(\"0\");\n      return;\n    }\n\n    const newExpense: Expense = {\n      id: uuidv4(),\n      description: name,\n      cost: parsedCost,\n    };\n\n    createExpense(newExpense);\n    setExpenses((prevExpenses) => [...prevExpenses, newExpense]);\n    setName(\"\");\n    setCost(\"0\");\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  };\n\n  const handleCostChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n\n    // Allow empty input, digits, or valid decimals\n    if (/^-?\\d*\\.?\\d*$/.test(value)) {\n      setCost(value);\n    }\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            required\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            data-testid=\"name-input\"\n            value={name}\n            onChange={handleNameChange}\n          />\n        </div>\n        <div className=\"col-sm\">\n          <label htmlFor=\"cost\">Cost</label>\n          <input\n            required\n            type=\"text\"\n            placeholder='0'\n            className=\"form-control\"\n            id=\"cost-input\"\n            data-testid=\"cost-input\"\n            value={cost}\n            onChange={handleCostChange}\n          />\n        </div>\n        <div className=\"col-sm\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary mt-3\"\n            data-testid=\"save-expense\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddExpenseForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}