{"ast":null,"code":"var _jsxFileName = \"/Users/judytruong/Downloads/UCSD_CSE/CSE110_Lab4/fa24-cse110-lab4-starter-code/client/src/components/Budget/Budget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { updateBudget, fetchBudget } from \"../../utils/budget-utils\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Budget = () => {\n  _s();\n  const {\n    budget,\n    setBudget\n  } = useContext(AppContext); // Access budget and setBudget from context\n  const [newBudget, setNewBudget] = useState(budget); // Local state for the new budget value\n  const [isEditing, setIsEditing] = useState(false); // State to toggle edit mode\n\n  // Handle changes to the budget input\n  const handleBudgetChange = e => {\n    setNewBudget(parseFloat(e.target.value));\n  };\n\n  // Function to save the new budget and update the server\n  const saveNewBudget = async () => {\n    try {\n      await updateBudget(newBudget); // Update the budget on the server\n      const updatedBudget = await fetchBudget(); // Fetch the updated budget from the server\n      setBudget(updatedBudget); // Update the budget in context with the server's response\n    } catch (error) {\n      console.error(\"Error updating budget:\", error);\n    }\n    setIsEditing(false); // Exit edit mode\n  };\n\n  // Toggle between edit and view modes\n  const toggleEditMode = () => {\n    setIsEditing(prev => !prev); // Toggle edit mode\n    setNewBudget(budget); // Reset newBudget to current budget when editing starts\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-secondary p-3 d-flex align-items-center justify-content-between\",\n    children: isEditing ?\n    /*#__PURE__*/\n    // Editable input for the budget with a save button\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newBudget,\n        onChange: handleBudgetChange,\n        className: \"form-control me-2\",\n        placeholder: \"Enter new budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: saveNewBudget,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // View mode with budget display and edit button\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Budget: $\", budget]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: toggleEditMode,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Budget, \"OXFp3iPUAnxS1GsG36ISYhu2LtE=\");\n_c = Budget;\nexport default Budget;\nvar _c;\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"names":["React","useState","useContext","AppContext","updateBudget","fetchBudget","jsxDEV","_jsxDEV","Fragment","_Fragment","Budget","_s","budget","setBudget","newBudget","setNewBudget","isEditing","setIsEditing","handleBudgetChange","e","parseFloat","target","value","saveNewBudget","updatedBudget","error","console","toggleEditMode","prev","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/judytruong/Downloads/UCSD_CSE/CSE110_Lab4/fa24-cse110-lab4-starter-code/client/src/components/Budget/Budget.tsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { updateBudget, fetchBudget } from \"../../utils/budget-utils\";\n\nconst Budget = () => {\n  const { budget, setBudget } = useContext(AppContext); // Access budget and setBudget from context\n  const [newBudget, setNewBudget] = useState(budget); // Local state for the new budget value\n  const [isEditing, setIsEditing] = useState(false); // State to toggle edit mode\n\n  // Handle changes to the budget input\n  const handleBudgetChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewBudget(parseFloat(e.target.value));\n  };\n\n  // Function to save the new budget and update the server\n  const saveNewBudget = async () => {\n    try {\n      await updateBudget(newBudget); // Update the budget on the server\n      const updatedBudget = await fetchBudget(); // Fetch the updated budget from the server\n      setBudget(updatedBudget); // Update the budget in context with the server's response\n    } catch (error) {\n      console.error(\"Error updating budget:\", error);\n    }\n    setIsEditing(false); // Exit edit mode\n  };\n\n  // Toggle between edit and view modes\n  const toggleEditMode = () => {\n    setIsEditing((prev) => !prev); // Toggle edit mode\n    setNewBudget(budget); // Reset newBudget to current budget when editing starts\n  };\n\n  return (\n    <div className=\"alert alert-secondary p-3 d-flex align-items-center justify-content-between\">\n      {isEditing ? (\n        // Editable input for the budget with a save button\n        <>\n          <input\n            type=\"number\"\n            value={newBudget}\n            onChange={handleBudgetChange}\n            className=\"form-control me-2\"\n            placeholder=\"Enter new budget\"\n          />\n          <button className=\"btn btn-primary\" onClick={saveNewBudget}>\n            Save\n          </button>\n        </>\n      ) : (\n        // View mode with budget display and edit button\n        <>\n          <div>Budget: ${budget}</div>\n          <button className=\"btn btn-primary\" onClick={toggleEditMode}>\n            Edit\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Budget;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,YAAY,EAAEC,WAAW,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErE,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGX,UAAU,CAACC,UAAU,CAAC,CAAC,CAAC;EACtD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAACW,MAAM,CAAC,CAAC,CAAC;EACpD,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD;EACA,MAAMiB,kBAAkB,GAAIC,CAAsC,IAAK;IACrEJ,YAAY,CAACK,UAAU,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMnB,YAAY,CAACU,SAAS,CAAC,CAAC,CAAC;MAC/B,MAAMU,aAAa,GAAG,MAAMnB,WAAW,CAAC,CAAC,CAAC,CAAC;MAC3CQ,SAAS,CAACW,aAAa,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;IACAR,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;EACvB,CAAC;;EAED;EACA,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3BV,YAAY,CAAEW,IAAI,IAAK,CAACA,IAAI,CAAC,CAAC,CAAC;IAC/Bb,YAAY,CAACH,MAAM,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEL,OAAA;IAAKsB,SAAS,EAAC,6EAA6E;IAAAC,QAAA,EACzFd,SAAS;IAAA;IACR;IACAT,OAAA,CAAAE,SAAA;MAAAqB,QAAA,gBACEvB,OAAA;QACEwB,IAAI,EAAC,QAAQ;QACbT,KAAK,EAAER,SAAU;QACjBkB,QAAQ,EAAEd,kBAAmB;QAC7BW,SAAS,EAAC,mBAAmB;QAC7BI,WAAW,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACF9B,OAAA;QAAQsB,SAAS,EAAC,iBAAiB;QAACS,OAAO,EAAEf,aAAc;QAAAO,QAAA,EAAC;MAE5D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CAAC;IAAA;IAEH;IACA9B,OAAA,CAAAE,SAAA;MAAAqB,QAAA,gBACEvB,OAAA;QAAAuB,QAAA,GAAK,WAAS,EAAClB,MAAM;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5B9B,OAAA;QAAQsB,SAAS,EAAC,iBAAiB;QAACS,OAAO,EAAEX,cAAe;QAAAG,QAAA,EAAC;MAE7D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAvDID,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAyDZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}