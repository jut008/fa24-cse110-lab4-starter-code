{"ast":null,"code":"import { API_BASE_URL } from \"../constants/constants\";\n// Function to create an expense in the backend. Method: POST\nexport const createExpense = async expense => {\n  const response = await fetch(`${API_BASE_URL}/expenses`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(expense)\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to create expense\");\n  }\n  return response.json();\n};\n\n// Function to delete an expense in the backend. Method: DELETE\nexport const deleteExpense = async id => {\n  const response = await fetch(`${API_BASE_URL}/expenses/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to delete expense\");\n  }\n};\n\n// Function to get all expenses from the backend. Method: GET\nexport const fetchExpenses = async () => {\n  try {\n    const response = await fetch(\"http://localhost:8080/expenses\");\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch expenses\");\n    }\n    const data = await response.json();\n    return data.data; // Assuming the server response structure is { data: [...] }\n  } catch (error) {\n    console.error(\"Error fetching expenses:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","createExpense","expense","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","deleteExpense","id","fetchExpenses","data","error","console"],"sources":["/Users/judytruong/Downloads/UCSD_CSE/CSE110_Lab4/fa24-cse110-lab4-starter-code/client/src/utils/expense-utils.ts"],"sourcesContent":["import { API_BASE_URL } from \"../constants/constants\";\nimport { Expense } from \"../types/types\";\n\n// Function to create an expense in the backend. Method: POST\nexport const createExpense = async (expense: Expense): Promise<Expense> => {\n\tconst response = await fetch(`${API_BASE_URL}/expenses`, {\n    \tmethod: \"POST\",\n    \theaders: {\n        \t\"Content-Type\": \"application/json\",\n    \t},\n    \tbody: JSON.stringify(expense),\n\t});\n\tif (!response.ok) {\n    \tthrow new Error(\"Failed to create expense\");\n\t}\n\treturn response.json();\n};\n\n// Function to delete an expense in the backend. Method: DELETE\nexport const deleteExpense = async (id: string): Promise<void> => {\n    const response = await fetch(`${API_BASE_URL}/expenses/${id}`, {\n        method: \"DELETE\",\n    });\n    if (!response.ok) {\n        throw new Error(\"Failed to delete expense\");\n    }\n};\n\n// Function to get all expenses from the backend. Method: GET\nexport const fetchExpenses = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/expenses\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch expenses\");\n      }\n      const data = await response.json();\n      return data.data; // Assuming the server response structure is { data: [...] }\n    } catch (error) {\n      console.error(\"Error fetching expenses:\", error);\n      throw error;\n    }\n  };"],"mappings":"AAAA,SAASA,YAAY,QAAQ,wBAAwB;AAGrD;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAgB,IAAuB;EAC1E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,WAAW,EAAE;IACrDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;EAChC,CAAC,CAAC;EACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;EACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACvB,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,EAAU,IAAoB;EAC9D,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,aAAac,EAAE,EAAE,EAAE;IAC3DT,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,IAAI,CAACF,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;IAC9D,IAAI,CAACD,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IACA,MAAMK,IAAI,GAAG,MAAMb,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,OAAOI,IAAI,CAACA,IAAI,CAAC,CAAC;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}