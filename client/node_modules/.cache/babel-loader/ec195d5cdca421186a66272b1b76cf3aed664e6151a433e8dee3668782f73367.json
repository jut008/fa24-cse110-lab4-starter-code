{"ast":null,"code":"var _jsxFileName = \"/Users/judytruong/Downloads/UCSD_CSE/CSE110_Lab4/fa24-cse110-lab4-starter-code/client/src/context/AppContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { fetchBudget } from \"../utils/budget-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUDGET_DEFAULT = 1000;\nconst initialState = {\n  expenses: [],\n  setExpenses: () => {},\n  budget: 0,\n  setBudget: () => {},\n  createExpense: () => {}\n};\nexport const AppContext = /*#__PURE__*/createContext(initialState);\nexport const AppProvider = props => {\n  _s();\n  const [expenses, setExpenses] = useState(initialState.expenses);\n  const [budget, setBudget] = useState(0);\n  const [loading, setLoading] = useState(true); // New loading state\n\n  const createExpense = expense => {\n    setExpenses([...expenses, expense]);\n  };\n  useEffect(() => {\n    const loadBudget = async () => {\n      try {\n        const fetchedBudget = await fetchBudget();\n        setBudget(fetchedBudget);\n      } catch (error) {\n        console.error(\"Failed to fetch budget:\", error);\n      } finally {\n        setLoading(false); // Set loading to false after fetching\n      }\n    };\n    loadBudget();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this); // Display a loading indicator while fetching the budget\n  }\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      expenses: expenses,\n      setExpenses: setExpenses,\n      budget: budget,\n      createExpense: createExpense,\n      setBudget: setBudget\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"kcJxG4if/QLRGxExB+4DKQqvcpI=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","fetchBudget","jsxDEV","_jsxDEV","BUDGET_DEFAULT","initialState","expenses","setExpenses","budget","setBudget","createExpense","AppContext","AppProvider","props","_s","loading","setLoading","expense","loadBudget","fetchedBudget","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["/Users/judytruong/Downloads/UCSD_CSE/CSE110_Lab4/fa24-cse110-lab4-starter-code/client/src/context/AppContext.tsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport { Expense } from \"../types/types\";\nimport { fetchBudget } from \"../utils/budget-utils\";\n\nconst BUDGET_DEFAULT = 1000;\n\ninterface AppContextType {\n  expenses: Expense[];\n  setExpenses: React.Dispatch<React.SetStateAction<Expense[]>>;\n  budget: number;\n  createExpense: (expense: Expense) => void;\n  setBudget: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst initialState: AppContextType = {\n  expenses: [],\n  setExpenses: () => {},\n  budget: 0,\n  setBudget: () => {},\n  createExpense: () => {},\n};\n\nexport const AppContext = createContext<AppContextType>(initialState);\n\nexport const AppProvider = (props: any) => {\n  const [expenses, setExpenses] = useState<Expense[]>(initialState.expenses);\n  const [budget, setBudget] = useState<number>(0);\n  const [loading, setLoading] = useState(true); // New loading state\n\n  const createExpense = (expense: Expense) => {\n    setExpenses([...expenses, expense]);\n  }\n\n  useEffect(() => {\n    const loadBudget = async () => {\n      try {\n        const fetchedBudget = await fetchBudget();\n        setBudget(fetchedBudget);\n      } catch (error) {\n        console.error(\"Failed to fetch budget:\", error);\n      } finally {\n        setLoading(false); // Set loading to false after fetching\n      }\n    };\n\n    loadBudget();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>; // Display a loading indicator while fetching the budget\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        expenses: expenses,\n        setExpenses: setExpenses,\n        budget: budget,\n        createExpense: createExpense,\n        setBudget: setBudget,\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE1D,SAASC,WAAW,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,cAAc,GAAG,IAAI;AAU3B,MAAMC,YAA4B,GAAG;EACnCC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAEA,CAAA,KAAM,CAAC,CAAC;EACrBC,MAAM,EAAE,CAAC;EACTC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAC;EACnBC,aAAa,EAAEA,CAAA,KAAM,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,UAAU,gBAAGb,aAAa,CAAiBO,YAAY,CAAC;AAErE,OAAO,MAAMO,WAAW,GAAIC,KAAU,IAAK;EAAAC,EAAA;EACzC,MAAM,CAACR,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAYM,YAAY,CAACC,QAAQ,CAAC;EAC1E,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAS,CAAC,CAAC;EAC/C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C,MAAMW,aAAa,GAAIO,OAAgB,IAAK;IAC1CV,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEW,OAAO,CAAC,CAAC;EACrC,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,aAAa,GAAG,MAAMlB,WAAW,CAAC,CAAC;QACzCQ,SAAS,CAACU,aAAa,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,SAAS;QACRJ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDE,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIH,OAAO,EAAE;IACX,oBAAOZ,OAAA;MAAAmB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,oBACEvB,OAAA,CAACQ,UAAU,CAACgB,QAAQ;IAClBC,KAAK,EAAE;MACLtB,QAAQ,EAAEA,QAAQ;MAClBC,WAAW,EAAEA,WAAW;MACxBC,MAAM,EAAEA,MAAM;MACdE,aAAa,EAAEA,aAAa;MAC5BD,SAAS,EAAEA;IACb,CAAE;IAAAa,QAAA,EAEDT,KAAK,CAACS;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAE1B,CAAC;AAACZ,EAAA,CAzCWF,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}