{"ast":null,"code":"export const fetchBudget = async () => {\n  try {\n    const response = await fetch(\"http://localhost:8080/budget\");\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch budget\");\n    }\n    const data = await response.json();\n    return data.budget;\n  } catch (error) {\n    console.error(\"Error fetching budget:\", error);\n    throw error;\n  }\n};\nexport const updateBudget = async newBudget => {\n  try {\n    const response = await fetch(\"http://localhost:8080/budget\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        newAmount: newBudget\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to update budget\");\n    }\n    const data = await response.json();\n    return data.budget;\n  } catch (error) {\n    console.error(\"Error updating budget:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["fetchBudget","response","fetch","ok","Error","data","json","budget","error","console","updateBudget","newBudget","method","headers","body","JSON","stringify","newAmount"],"sources":["/Users/judytruong/Downloads/UCSD_CSE/CSE110_Lab4/fa24-cse110-lab4-starter-code/client/src/utils/budget-utils.ts"],"sourcesContent":["export const fetchBudget = async (): Promise<number> => {\n    try {\n      const response = await fetch(\"http://localhost:8080/budget\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch budget\");\n      }\n      const data = await response.json();\n      return data.budget;\n    } catch (error) {\n      console.error(\"Error fetching budget:\", error);\n      throw error;\n    }\n};\n\nexport const updateBudget = async (newBudget: number): Promise<number> => {\n    try {\n      const response = await fetch(\"http://localhost:8080/budget\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ newAmount: newBudget }),\n      });\n  \n      if (!response.ok) {\n        throw new Error(\"Failed to update budget\");\n      }\n  \n      const data = await response.json();\n      return data.budget;\n    } catch (error) {\n      console.error(\"Error updating budget:\", error);\n      throw error;\n    }\n};"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAA6B;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,MAAM;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACJ,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAOC,SAAiB,IAAsB;EACtE,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DU,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,SAAS,EAAEN;MAAU,CAAC;IAC/C,CAAC,CAAC;IAEF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,MAAM;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}